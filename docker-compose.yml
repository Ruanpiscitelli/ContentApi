# Configurações comuns para todos os serviços
x-common-settings: &common-settings
  restart: unless-stopped
  init: true
  security_opt:
    - no-new-privileges:true
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    interval: 30s
    timeout: 10s
    retries: 3
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

# Variáveis de ambiente comuns
x-common-env: &common-env
  PYTHONPATH: /app
  PYTHONUNBUFFERED: 1
  TRANSFORMERS_CACHE: /app/cache/transformers
  HF_HOME: /app/cache/huggingface

# Configuração GPU
x-gpu-settings: &gpu-settings
  runtime: nvidia
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: 1
            capabilities: [gpu]

x-volumes: &common-volumes
  - ./models:/app/models:ro
  - ./logs:/app/logs
  - ./cache:/app/cache
  - ./uploads:/app/uploads
  - ./temp:/app/temp

services:
  base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: content-api-base:latest

  video-generator:
    <<: [*common-settings, *gpu-settings]
    build:
      context: ./services/video_generator
      dockerfile: Dockerfile
    volumes: *common-volumes
    ports:
      - "8004:8000"
    environment:
      <<: *common-env
      NVIDIA_VISIBLE_DEVICES: 0
      CUDA_VISIBLE_DEVICES: 0
    depends_on:
      - base
      - redis

  image-generator:
    <<: [*common-settings, *gpu-settings]
    build:
      context: ./services/image_generator
      dockerfile: Dockerfile
    volumes: *common-volumes
    ports:
      - "8002:8000"
    environment:
      <<: *common-env
      NVIDIA_VISIBLE_DEVICES: 1
      CUDA_VISIBLE_DEVICES: 1
    depends_on:
      - base
      - redis

  text-generator:
    <<: [*common-settings, *gpu-settings]
    build:
      context: ./services/text_generator
      dockerfile: Dockerfile
    volumes: *common-volumes
    ports:
      - "8006:8000"
    environment:
      <<: *common-env
      NVIDIA_VISIBLE_DEVICES: 2
      CUDA_VISIBLE_DEVICES: 2
    depends_on:
      - base
      - redis

  voice-generator:
    <<: [*common-settings, *gpu-settings]
    build:
      context: ./services/voice_generator
      dockerfile: Dockerfile
    volumes: *common-volumes
    ports:
      - "8003:8000"
    environment:
      <<: *common-env
      NVIDIA_VISIBLE_DEVICES: 3
      CUDA_VISIBLE_DEVICES: 3
    depends_on:
      - base
      - redis

  video-editor:
    <<: *common-settings
    build:
      context: ./services/video_editor
      dockerfile: Dockerfile
    volumes: *common-volumes
    ports:
      - "8005:8000"
    environment:
      <<: *common-env
    depends_on:
      - base
      - redis

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "6379:6379"

  dashboard:
    <<: *common-settings
    build:
      context: ./services/dashboard
      dockerfile: Dockerfile
    volumes: *common-volumes
    ports:
      - "8001:8000"
    environment:
      <<: *common-env
    depends_on:
      - base
      - redis

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/24

volumes:
  redis_data: {} 