# Configurações comuns para todos os serviços
x-common-settings: &common-settings
  restart: unless-stopped
  init: true
  security_opt:
    - no-new-privileges:true
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    interval: 30s
    timeout: 10s
    retries: 3
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

# Variáveis de ambiente comuns
x-common-env: &common-env
  PYTHONPATH: /app
  PYTHONUNBUFFERED: 1
  TRANSFORMERS_CACHE: /app/cache/transformers
  HF_HOME: /app/cache/huggingface

# Configuração padrão de recursos
x-resources: &service-resources
  limits:
    cpus: '4'
    memory: 16G
  reservations:
    devices:
      - driver: nvidia
        count: 1
        capabilities: [gpu, utility, compute]

x-gpu-settings: &gpu-settings
  runtime: nvidia
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: 1
            capabilities: [gpu]

x-volumes: &common-volumes
  - ./models:/app/models:ro
  - ./logs:/app/logs
  - ./cache:/app/cache
  - ./uploads:/app/uploads
  - ./temp:/app/temp

services:
  base:
    build:
      context: ./meu-servidor-ia
      dockerfile: Dockerfile.base
    image: contentapi-base

  video-generator:
    <<: [*common-settings, *gpu-settings]
    build:
      context: ./meu-servidor-ia
      dockerfile: services/video_generator/Dockerfile
    volumes:
      - ./models:/app/models:ro
      - ./storage:/app/storage
      - ./logs/video:/app/logs
      - ./cache:/app/cache
    ports:
      - "8003:8000"
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    depends_on:
      - base

  image-generator:
    <<: [*common-settings]
    build:
      context: .
      dockerfile: services/image_generator/Dockerfile
    volumes:
      - ./models:/app/models:ro
      - ./storage:/app/storage
      - ./logs/image:/app/logs
      - ./cache:/app/cache
    ports:
      - "8002:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    depends_on:
      - base

  text-generation:
    <<: [*common-settings, *gpu-settings]
    build:
      context: ./meu-servidor-ia
      dockerfile: services/text_generation/Dockerfile
    volumes:
      - ./models:/app/models:ro
      - ./storage:/app/storage
      - ./logs/text:/app/logs
      - ./cache:/app/cache
    ports:
      - "8004:8000"
    environment:
      - NVIDIA_VISIBLE_DEVICES=2
      - CUDA_VISIBLE_DEVICES=2
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    depends_on:
      - base

  voice-generator:
    <<: [*common-settings, *gpu-settings]
    build:
      context: ./meu-servidor-ia
      dockerfile: services/voice_generator/Dockerfile
    volumes:
      - ./models:/app/models:ro
      - ./storage:/app/storage
      - ./logs/voice:/app/logs
      - ./cache:/app/cache
    ports:
      - "8005:8000"
    environment:
      - NVIDIA_VISIBLE_DEVICES=3
      - CUDA_VISIBLE_DEVICES=3
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    depends_on:
      - base

  video-editor:
    <<: *common-settings
    build:
      context: .
      dockerfile: services/video_editor/Dockerfile
    volumes:
      - ./models:/app/models:ro
      - ./storage:/app/storage
      - ./logs/editor:/app/logs
      - ./cache:/app/cache
      - ./shared:/app/shared
    ports:
      - "8005:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "6379:6379"

  dashboard:
    <<: *common-settings
    build:
      context: ./meu-servidor-ia/services/dashboard
      dockerfile: Dockerfile
    volumes:
      - ./meu-servidor-ia/shared:/app/shared:z
      - ./logs/dashboard:/app/dashboard/logs
    ports:
      - "8006:8000"
    environment:
      <<: *common-env
      API_HOST: 0.0.0.0
      API_PORT: 8000
    depends_on:
      redis:
        condition: service_healthy

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/24

volumes:
  redis_data: {}
  shared:
    driver: local
    driver_opts:
      type: none
      device: ./meu-servidor-ia/shared
      o: bind 