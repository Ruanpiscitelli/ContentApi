version: '3.8'

x-common-deploy: &common-deploy
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: all
            capabilities: [gpu, utility, compute]
    update_config:
      parallelism: 1
      delay: 10s
    restart_policy:
      condition: on-failure
      max_attempts: 3

x-common-settings: &common-settings
  deploy:
    resources:
      limits:
        cpus: '4'
        memory: 16G
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  ulimits:
    memlock: -1
    stack: 67108864
  shm_size: '2gb'
  security_opt:
    - no-new-privileges:true
  read_only: true
  tmpfs:
    - /tmp
  cap_drop:
    - ALL
  restart: unless-stopped
  depends_on:
    redis:
      condition: service_healthy
  init: true
  dns:
    - 8.8.8.8
    - 8.8.4.4
  stop_grace_period: 30s

services:
  video-generator:
    build:
      context: .
      dockerfile: services/video_generator/Dockerfile
    volumes:
      - ./models:/app/models:ro
      - ./shared:/app/shared:ro
    <<: *common-deploy
    <<: *common-settings
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - CUDA_VISIBLE_DEVICES=all
      - CUDA_HOME=/usr/local/cuda
      - TORCH_CUDA_ARCH_LIST=8.6
      - XFORMERS_ENABLE_FLASH_ATTENTION=true
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  image-generator:
    build:
      context: .
      dockerfile: services/image_generator/Dockerfile
    volumes:
      - ./models:/app/models:ro
      - ./shared:/app/shared:ro
    <<: *common-deploy
    <<: *common-settings
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - CUDA_VISIBLE_DEVICES=all
      - CUDA_HOME=/usr/local/cuda
      - TORCH_CUDA_ARCH_LIST=8.6
      - XFORMERS_ENABLE_FLASH_ATTENTION=true
    ports:
      - "8002:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  text-generation:
    build:
      context: .
      dockerfile: services/text_generation/Dockerfile
    volumes:
      - ./models:/app/models:ro
      - ./shared:/app/shared:ro
    <<: *common-deploy
    <<: *common-settings
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - CUDA_VISIBLE_DEVICES=all
      - CUDA_HOME=/usr/local/cuda
      - TORCH_CUDA_ARCH_LIST=8.6
      - VLLM_USE_CUDA=1
      - XFORMERS_ENABLE_FLASH_ATTENTION=true
    ports:
      - "8003:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  voice-generator:
    build:
      context: .
      dockerfile: services/voice_generator/Dockerfile
    ports:
      - "8004:9000"
    volumes:
      - ./models:/app/models:ro
      - ./shared:/app/shared:ro
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - CUDA_VISIBLE_DEVICES=all
      - CUDA_HOME=/usr/local/cuda
      - TORCH_CUDA_ARCH_LIST=8.6
      - XFORMERS_ENABLE_FLASH_ATTENTION=true
    networks:
      - ai-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /data
    cap_drop:
      - ALL

volumes:
  redis_data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/24
  ai-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.29.0.0/24 