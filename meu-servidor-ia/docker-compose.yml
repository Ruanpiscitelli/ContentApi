services:
  ###########################################################
  # Serviço do Dashboard e Monitoramento
  ###########################################################
  dashboard:
    build: ./dashboard
    container_name: dashboard_service
    ports:
      - "8005:8000"
    environment:
      - DASHBOARD_USERNAME=${DASHBOARD_USERNAME}
      - DASHBOARD_PASSWORD=${DASHBOARD_PASSWORD}
      - SESSION_SECRET=${SESSION_SECRET}
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./dashboard/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    depends_on:
      - prometheus

  ###########################################################
  # Serviços de Geração de Conteúdo
  ###########################################################
  vllm:
    image: vllm/vllm-openai:latest
    platform: linux/amd64
    container_name: vllm_service
    command: >
      --model mistralai/Mistral-7B-v0.1
      --host 0.0.0.0
      --port 8000
      --tensor-parallel-size 1
      --gpu-memory-utilization 0.90
      --max-num-batched-tokens 8192
    ports:
      - "8007:8000"
    volumes:
      - ./cache:/data
    # Configurações de GPU - comentadas para Mac
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    #           count: 1
    #           driver: nvidia
    # runtime: nvidia

  image_generator:
    build:
      context: ./services/image_generator
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: image_generator_service
    ports:
      - "8001:8000"
    environment:
      - API_TOKEN=${API_TOKEN}
    volumes:
      - ./cache:/app/cache
    # Configurações de GPU - comentadas para Mac
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    #           count: 1
    #           driver: nvidia
    # runtime: nvidia

  voice_generator:
    build:
      context: ./services/voice_generator
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: voice_generator_service
    ports:
      - "8002:8000"
    environment:
      - API_TOKEN=${API_TOKEN}
    volumes:
      - ./cache:/app/cache
    # Configurações de GPU - comentadas para Mac
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    #           count: 1
    #           driver: nvidia
    # runtime: nvidia

  video_generator:
    build: ./services/video_generator
    container_name: video_generator_service
    ports:
      - "8003:8000"
    environment:
      - API_TOKEN=${API_TOKEN}
    volumes:
      - ./cache:/app/cache
    # Configurações de GPU - comentadas para Mac
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    #           count: 1
    #           driver: nvidia
    # runtime: nvidia

  video_editor:
    build: ./services/video_editor
    container_name: video_editor_service
    ports:
      - "8004:8000"
    environment:
      - API_TOKEN=${API_TOKEN}
    volumes:
      - ./cache:/app/cache
    # Configurações de GPU - comentadas para Mac
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    #           count: 1
    #           driver: nvidia
    # runtime: nvidia

  text_generation:
    build:
      context: ./services/text_generation
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: text_generation_service
    ports:
      - "8006:8000"
    environment:
      - API_TOKEN=${API_TOKEN}
      - VLLM_ENDPOINT=http://vllm:8000/v1/completions
      - TEXT_GEN_API_TOKEN=${TEXT_GEN_API_TOKEN}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./cache:/app/cache
    depends_on:
      - vllm
      - redis
    # Configurações de GPU - comentadas para Mac
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    #           count: 1
    #           driver: nvidia
    # runtime: nvidia

  ###########################################################
  # Cache Redis
  ###########################################################
  redis:
    image: redis:7.2-alpine
    container_name: redis_service
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data

  ###########################################################
  # Proxy reverso (Nginx)
  ###########################################################
  nginx:
    image: nginx:latest
    container_name: proxy_nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - dashboard
      - image_generator
      - voice_generator
      - video_generator
      - video_editor
      - text_generation

volumes:
  grafana_data:
  prometheus_data: {}
  redis_data: {}
